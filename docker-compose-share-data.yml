# Use postgres/example user/password credentials
version: '3.9'

networks:
  dbt-starrock-network:
    name: dbt-starrock
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/16
          gateway: 172.18.0.1

volumes:
  postgres-data:
    name: postgres-data
    driver: local
  minio-data:
    name: minio-data
    driver: local
  starrock-postgres-data:
    name: starrock-postgres-data
    driver: local
  hive-data:
    name: hive-data
    driver: local
  starrock-fe-share-data:
    name: starrock-fe-share-data
    driver: local
services:
  starrocks-fe:
    image: starrocks/fe-ubuntu:3.2-latest
    hostname: starrocks-fe
    container_name: starrocks-fe
    user: root
    command:
      - /bin/bash
      - -c
      - |
        echo "# enable shared data, set storage type, set endpoint" >> /opt/starrocks/fe/conf/fe.conf
        echo "run_mode = shared_data" >> /opt/starrocks/fe/conf/fe.conf
        echo "cloud_native_storage_type = S3" >> /opt/starrocks/fe/conf/fe.conf
        echo "aws_s3_endpoint = minio:9000" >> /opt/starrocks/fe/conf/fe.conf

        echo "# set the path in MinIO" >> /opt/starrocks/fe/conf/fe.conf
        echo "aws_s3_path = data/starrocks" >> /opt/starrocks/fe/conf/fe.conf

        echo "# credentials for MinIO object read/write" >> /opt/starrocks/fe/conf/fe.conf
        echo "aws_s3_access_key = username" >> /opt/starrocks/fe/conf/fe.conf
        echo "aws_s3_secret_key = password" >> /opt/starrocks/fe/conf/fe.conf
        echo "aws_s3_use_instance_profile = false" >> /opt/starrocks/fe/conf/fe.conf
        echo "aws_s3_use_aws_sdk_default_behavior = false" >> /opt/starrocks/fe/conf/fe.conf

        echo "# Set this to false if you do not want default" >> /opt/starrocks/fe/conf/fe.conf
        echo "# storage created in the object storage using" >> /opt/starrocks/fe/conf/fe.conf
        echo "# the details provided above" >> /opt/starrocks/fe/conf/fe.conf
        echo "enable_load_volume_from_conf = true" >> /opt/starrocks/fe/conf/fe.conf

        /opt/starrocks/fe/bin/start_fe.sh
    ports:
      - 8030:8030
      - 9020:9020
      - 9030:9030
    networks:
      dbt-starrock-network:
        ipv4_address: 172.18.0.3
    healthcheck:
      test: 'mysql -u root -h starrocks-fe -P 9030 -e "show frontends\G" |grep "Alive: true"'
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - starrock-fe-share-data:/opt/starrocks/fe/meta
    depends_on:
      - minio

  starrocks-cn:
    image: starrocks/cn-ubuntu:3.2-latest
    command:
      - /bin/bash
      - -c
      - |
        sleep 15s;
        ulimit -u 65535;
        ulimit -n 65535;
        mysql --connect-timeout 2 -h starrocks-fe -P9030 -uroot -e "ALTER SYSTEM ADD COMPUTE NODE \"starrocks-cn:9050\";"
        /opt/starrocks/cn/bin/start_cn.sh
    ports:
      - 8040:8040
    networks:
      dbt-starrock-network:
        ipv4_address: 172.18.0.4
    hostname: starrocks-cn
    container_name: starrocks-cn
    user: root
    depends_on:
      - starrocks-fe
      - minio
    healthcheck:
      test: 'mysql -u root -h starrocks-fe -P 9030 -e "SHOW COMPUTE NODES\G" |grep "Alive: true"'
      interval: 10s
      timeout: 5s
      retries: 3

  minio:
    image: bitnami/minio:2023.7.18
    container_name: minio
    restart: on-failure
    networks:
      dbt-starrock-network:
        ipv4_address: 172.18.0.5
    hostname: minio
    environment:
      MINIO_ROOT_USER: username
      MINIO_ROOT_PASSWORD: password
      MINIO_DEFAULT_BUCKETS: data/warehouse
    volumes:
      - minio-data:/data
  
  metastore:
    # image: apache/hive:4.0.0-alpha-2 caused engine not found when create table using hive metastore
    image: apache/hive:3.1.3
    container_name: metastore
    restart: on-failure
    networks:
      dbt-starrock-network:
        ipv4_address: 172.18.0.2
    hostname: metastore
    environment:
      DB_DRIVER: postgres
      SERVICE_NAME: metastore
      HADOOP_CLASSPATH: /opt/hadoop/share/hadoop/tools/lib/hadoop-aws-3.1.0.jar:/opt/hadoop/share/hadoop/tools/lib/aws-java-sdk-bundle-1.11.271.jar
      IS_RESUME: true
    volumes:
      - ./hive/conf/hive-site.xml:/opt/hive/conf/hive-site.xml
      - hive-data:/opt/hive/data/warehouse
    depends_on: [ postgres, minio]
  
  postgres:
    image: postgres:13.8-alpine
    container_name: postgres
    restart: on-failure
    networks:
      dbt-starrock-network:
        ipv4_address: 172.18.0.6
    hostname: postgres
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: metastore
    volumes:
      - postgres-data:/var/lib/postgresql/data
  
  starrock-postgres:
    image: postgres:13.8-alpine
    container_name: starrock-postgres
    restart: on-failure
    networks:
      dbt-starrock-network:
        ipv4_address: 172.18.0.7
    hostname: starrock-postgres
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
    volumes:
      - starrock-postgres-data:/var/lib/postgresql/data
